import android.content.Context;
import android.graphics.Canvas;
import android.graphics.Color;
import android.graphics.Paint;
import android.graphics.Rect;
import android.os.Handler;
import android.os.Message;
import android.util.AttributeSet;
import android.util.DisplayMetrics;
import android.widget.ProgressBar;

public class MyProgressBar extends ProgressBar {
	Paint mPaint;
	private int proing;
	//setSpeed设置滚动速度，
	public int speed=10;
	//文本画笔大小
	public float taxtsize=16f;
	private Handler h=new Handler(){
		@Override
		public void handleMessage(Message msg) {
			// TODO Auto-generated method stub
			int p=msg.what;
			mPaint.setTextSize(TypedValue.COMPLEX_UNIT_SP,taxtsize);
			System.out.println("taxtsize"+taxtsize);
			if(p>proing){
				p=proing;
			}
			MyProgressBar.this.setProgress(p);
			super.handleMessage(msg);
		}
		
	};
	public MyProgressBar(Context context, AttributeSet attrs, int defStyle) {
		super(context, attrs, defStyle);
		initText();
		// TODO Auto-generated constructor stub
	}

	public MyProgressBar(Context context, AttributeSet attrs) {
		super(context, attrs);
		initText();
		// TODO Auto-generated constructor stub
	}

	public MyProgressBar(Context context) {
		super(context);
		initText();
		// TODO Auto-generated constructor stub
	}

	public void setprog(final int press) {
		proing=press;
		Thread t=new Thread(new Runnable() {
			@Override
			public void run() {
				// TODO Auto-generated method stub
				for(int i=0;i<=press;i++){
					h.sendEmptyMessage(i);
					try {
						Thread.sleep(speed);
					} catch (InterruptedException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
				}
			}
		});
		t.start();
	}
	 @Override
     protected synchronized void onDraw(Canvas canvas) {
         // TODO Auto-generated method stub
         super.onDraw(canvas);
         //this.setText();
         Rect rect = new Rect();
         String text=this.getProgress()+"%";
         this.mPaint.getTextBounds(text, 0, text.length(), rect);
         int x = (getWidth() * this.getProgress() /100) - rect.centerX(); 
         int y = (getHeight() / 2) - rect.centerY(); 
         canvas.drawText(text, x, y, this.mPaint); 
     }
	 private void initText(){
         this.mPaint = new Paint();
         this.mPaint.setTextSize(taxtsize);
         this.mPaint.setColor(Color.WHITE);
          
     }

	public void setSpeed(int speed) {
		this.speed = speed;
	}
	 
}
